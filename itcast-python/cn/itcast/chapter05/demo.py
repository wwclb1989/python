# 第5章 序列（列表与元组）
# 通用序列操作
# [起始索引:结束索引:步长]
seque = [1, 2, 3, 4, 5]
print(seque[::-1])
# 判断某个元素是否属于序列in, not in
# 使用+对序列进行连接操作
print([1, 2] + [3, 4])
# 序列与数字相乘
print([1, 2] * 3)
# len()用于计算序列的长度
# max(), min()可以找出序列最大、最小元素
# index()函数可以查找某个值在序列中第一次出现的位置，找不到会抛出异常
# count()用于统计序列中某个元素出现的次数


# 1. 可变序列--列表（List）
# 方括号[]和list()函数可以创建列表
# 列表推导式，可以创建列表
# [x for x in iterable]
# list.append()在列表末尾添加新的对象
# 重点：当使用重复操作符*对列表增加元素后，列表中的元素是同一个
# list.count()方法用于统计某个元素在列表中出现的次数
# list.extend()方法可以在列表末尾一次性追加另一个序列中的多个值
# list.index()方法用于从列表中找出某个值第一个匹配项的索引位置，找不到会抛出异常
# list.insert(index, obj)方法用于将对象插入列表的指定位置
# list.pop(index)移除列表中的一个元素，如果不指定index，最后一个元素会被移除，并且返回该元素的值
# list.remove(obj)用于移除列表中某个值的第一个匹配项，不存在时会抛出异常
# list.reserve()将列表反转
# list.sort()对列表进行排序，为列表特有方法，可指定参数reverse为True进行反向排序
# sorted(list)与list.sort()相比，该函数会返回一个新的列表

# 2. 不可变列表--元组（Tuple）
# 使用圆括号()或者tuple()方法创建一个元组，一个元素的元组要加逗号如(1,)
# 元组支持通用序列操作，使用del可删除整个元组
# 虽然无组是不可变序列，但是元组的元素可以是可变序列([], [], [])
# 任意无符号的多个对象，用逗号隔开，默认为元组
# str(), list(), tuple()可使字符串，列表，元组之间实现相互转换
# 列表和元组转换为字符串则必须依靠join函数
word = 'abcdef'
print(''.join(list(word)))
print(str(list(word)))
# 不可变序列range, range(start, stop[, step])
# range对象一般用来循环控制语句中，支持通用序列操作

